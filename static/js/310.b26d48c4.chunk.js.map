{"version":3,"file":"static/js/310.b26d48c4.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","utils/fetchs.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  list-style: none;\n\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  text-decoration: none;\n  color: darkred;\n  font-size: 20px;\n  font-family: cursive;\n\n  &:hover {\n    color: tomato\n  }\n`;\n\nexport const StyledInput = styled.input`\n  height: 14px;\n  margin-right: 10px;\n  border-radius: 8px;\n  padding: 8px;\n \n`;\n\nexport const StyledForm = styled.form`\n  margin-left: 30px;\n  margin-top: 20px;\n`;\n\nexport const StyledBtn = styled.button`\n  height: 32px;\n  background: darkblue;\n  color: beige;\n  font-style: italic;\n  font-weight: 700;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  padding: 8px;\n\n  &:hover {\n    background: yellow;\n    color: black\n  }\n`;","import { useSearchParams, useLocation } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'utils/fetchs';\nimport Loader from 'components/Loader/Loader';\nimport {\n  MovieList,\n  MovieLink,\n  StyledInput,\n  StyledForm,\n  StyledBtn,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const abortCtrl = new AbortController();\n\n    if (query === '') return;\n    async function searchMovies() {\n      try {\n        setLoading(true);\n        const movies = await getMovies(query);\n        if (movies) {\n          setMovie(movies.data.results);\n        }\n      } catch (error) {\n        setError(error.message);\n        Notiflix.Notify.failure(\n          'Sorry, cannot find any movie. Please, try again'\n        );\n      } finally {\n        setLoading(false);\n      }\n    }\n    searchMovies();\n\n    return () => abortCtrl.abort();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.elements.query.value === '') {\n      Notiflix.Notify.warning('Ooops! You need to enter something');\n      return;\n    }\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n    Notiflix.Notify.success('Enjoy!');\n  };\n  // console.log(movie);\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Enter movie name\"\n          name=\"query\"\n        />\n        <StyledBtn type=\"submit\">Search</StyledBtn>\n      </StyledForm>\n\n      {error &&\n        Notiflix.Notify.failure(\n          'Sorry, cannot find any movie. Please, try again'\n        )}\n      {loading && <Loader />}\n\n      <MovieList>\n        {movie.map(({ title, id }) => (\n          <li key={id}>\n            <MovieLink to={`${id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          </li>\n        ))}\n      </MovieList>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '8797bf46728068285205c5125a7a7653';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrending(signal) {\n  const resp = await axios.get(\n    `${BASE_URL}trending/all/day?language=en-US'&api_key=${API_KEY}`,\n    signal\n  );\n  return resp;\n}\n\nexport async function getDetails(movieId, signal) {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieId}?language=en-US?&api_key=${API_KEY}`,\n    signal\n  );\n\n  return resp;\n}\n\nexport async function getCast(movieId, signal) {\n  const resp = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`,\n    signal\n  );\n\n  return resp;\n}\n\nexport async function getReview(movieId, signal) {\n  const resp = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`,\n    signal\n  );\n\n  return resp;\n}\n\nexport async function getMovies(query, signal) {\n  const resp = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}?&api_key=${API_KEY}`,\n    signal\n  );\n\n  return resp;\n}\n"],"names":["MovieList","styled","MovieLink","Link","StyledInput","StyledForm","StyledBtn","useState","movie","setMovie","error","setError","loading","setLoading","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","useEffect","abortCtrl","AbortController","searchMovies","abort","getMovies","movies","data","results","message","Notiflix","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","autoComplete","placeholder","name","Loader","map","title","id","to","state","from","API_KEY","BASE_URL","getTrending","signal","axios","resp","getDetails","movieId","getCast","getReview"],"sourceRoot":""}